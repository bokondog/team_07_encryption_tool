<Window x:Class="TestCryption.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:TestCryption"
        mc:Ignorable="d"
    Title="Encryption Tool (TEAM 07)" Height="750" Width="700" MinWidth="650" MinHeight="700" Background="#FF3F3F46">
    <Window.Resources>
        <!-- Simple Dark Theme Brushes -->
        <SolidColorBrush x:Key="WindowBackgroundBrush" Color="#FF2D2D30"/>
        <SolidColorBrush x:Key="DarkBackgroundBrush" Color="#FF3F3F46"/>         <!-- Input controls, headers, list backgrounds -->
        <SolidColorBrush x:Key="MediumBackgroundBrush" Color="#FF4F4F56"/>       <!-- Tab content area, GroupBox content -->
        <SolidColorBrush x:Key="ControlBorderBrush" Color="#FF555555"/>
        <SolidColorBrush x:Key="HoverBackgroundBrush" Color="#FF6A6A6A"/>        <!-- Common Hover Background -->
        <SolidColorBrush x:Key="HoverBorderBrush" Color="#FF777777"/>          <!-- Common Hover Border -->
        <SolidColorBrush x:Key="PressedBackgroundBrush" Color="#FF4A4A4A"/>
        <SolidColorBrush x:Key="TextForegroundBrush" Color="#FFCCCCCC"/>
        <SolidColorBrush x:Key="TextForegroundWhiteBrush" Color="White"/>
        <SolidColorBrush x:Key="HighlightBrush" Color="#FF007ACC"/>             <!-- Standard selection/highlight color -->
        <SolidColorBrush x:Key="HighlightInactiveBrush" Color="#FF4A4E51"/>     <!-- Selection when control inactive -->
        <SolidColorBrush x:Key="DisabledForegroundBrush" Color="#FF888888"/>
        <SolidColorBrush x:Key="DisabledBackgroundBrush" Color="#FF444444"/>
        <SolidColorBrush x:Key="DisabledBorderBrush" Color="#FF555555"/>

        <!-- Base Control Styles -->
         <Style TargetType="Control">
             <Setter Property="Foreground" Value="{StaticResource TextForegroundBrush}"/>
             <Setter Property="BorderBrush" Value="{StaticResource ControlBorderBrush}"/>
             <Setter Property="Background" Value="{StaticResource DarkBackgroundBrush}"/>
             <Setter Property="BorderThickness" Value="1"/>
         </Style>

         <Style TargetType="ItemsControl">
             <Setter Property="Background" Value="{StaticResource DarkBackgroundBrush}"/>
             <Setter Property="BorderBrush" Value="{StaticResource ControlBorderBrush}"/>
             <Setter Property="BorderThickness" Value="1"/>
         </Style>

        <!-- Specific Control Styles -->
        <Style TargetType="TabControl" BasedOn="{StaticResource {x:Type ItemsControl}}">
            <!-- Inherits Background, BorderBrush, BorderThickness -->
        </Style>

        <Style TargetType="TabItem" BasedOn="{StaticResource {x:Type Control}}">
            <Setter Property="Padding" Value="10,5"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TabItem">
                        <Grid>
                            <Border Name="Border"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="1,1,1,0"
                                    CornerRadius="4,4,0,0"
                                    Margin="0,0,-1,0">
                                <ContentPresenter x:Name="ContentSite"
                                                  VerticalAlignment="Center"
                                                  HorizontalAlignment="Center"
                                                  ContentSource="Header"
                                                  Margin="{TemplateBinding Padding}"
                                                  RecognizesAccessKey="True"/>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="{StaticResource MediumBackgroundBrush}" />
                                <Setter Property="Foreground" Value="{StaticResource TextForegroundWhiteBrush}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                 <Setter TargetName="Border" Property="Background" Value="{StaticResource HoverBackgroundBrush}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                 <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

         <Style TargetType="Grid">
             <!-- Ensure Grid inside TabItem content area uses the Medium background -->
            <Setter Property="Background" Value="{StaticResource MediumBackgroundBrush}"/>
         </Style>

        <Style TargetType="Button" BasedOn="{StaticResource {x:Type Control}}">
             <Setter Property="Background" Value="{StaticResource DarkBackgroundBrush}"/> <!-- Default button distinct from inputs -->
             <Setter Property="Padding" Value="10,5"/>
             <Setter Property="Margin" Value="5"/>
             <Setter Property="MinWidth" Value="75"/>
             <Style.Triggers>
                 <Trigger Property="IsMouseOver" Value="True">
                     <Setter Property="Background" Value="{StaticResource HoverBackgroundBrush}"/>
                     <Setter Property="BorderBrush" Value="{StaticResource HoverBorderBrush}"/>
                 </Trigger>
                 <Trigger Property="IsPressed" Value="True">
                     <Setter Property="Background" Value="{StaticResource PressedBackgroundBrush}"/>
                     <Setter Property="BorderBrush" Value="{StaticResource ControlBorderBrush}"/>
                 </Trigger>
                 <Trigger Property="IsEnabled" Value="False">
                     <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
                     <Setter Property="Background" Value="{StaticResource DisabledBackgroundBrush}"/>
                     <Setter Property="BorderBrush" Value="{StaticResource DisabledBorderBrush}"/>
                 </Trigger>
             </Style.Triggers>
         </Style>

        <Style TargetType="TextBox" BasedOn="{StaticResource {x:Type Control}}">
            <Setter Property="Padding" Value="5"/>
            <Setter Property="CaretBrush" Value="{StaticResource TextForegroundBrush}"/>
            <Setter Property="SelectionBrush" Value="{StaticResource HighlightBrush}"/>
             <Style.Triggers>
                 <Trigger Property="IsMouseOver" Value="True">
                     <Setter Property="BorderBrush" Value="{StaticResource HoverBorderBrush}"/>
                 </Trigger>
                 <Trigger Property="IsKeyboardFocused" Value="True">
                     <Setter Property="BorderBrush" Value="{StaticResource HighlightBrush}"/>
                 </Trigger>
                 <Trigger Property="IsEnabled" Value="False">
                     <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
                     <Setter Property="Background" Value="{StaticResource DisabledBackgroundBrush}"/>
                     <Setter Property="BorderBrush" Value="{StaticResource DisabledBorderBrush}"/>
                 </Trigger>
             </Style.Triggers>
         </Style>

         <Style TargetType="Label"> <!-- Label doesn't derive from Control -->
            <Setter Property="Foreground" Value="{StaticResource TextForegroundBrush}"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Background" Value="Transparent"/> <!-- Ensure labels don't block grid background -->
             <Style.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                     <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
                 </Trigger>
             </Style.Triggers>
         </Style>

        <!-- ListView -->
        <Style TargetType="ListView" BasedOn="{StaticResource {x:Type ItemsControl}}">
            <!-- Inherits Background, BorderBrush, BorderThickness -->
        </Style>

        <Style TargetType="ListViewItem" BasedOn="{StaticResource {x:Type Control}}">
             <Setter Property="Background" Value="Transparent"/> <!-- Items are transparent over ListView background -->
             <Setter Property="BorderThickness" Value="0"/> <!-- No border per item by default -->
             <Setter Property="Padding" Value="5,3"/>
             <Setter Property="HorizontalContentAlignment" Value="Stretch"/> <!-- Make content fill width -->
             <Style.Triggers>
                 <Trigger Property="IsMouseOver" Value="True">
                     <Setter Property="Background" Value="{StaticResource HoverBackgroundBrush}"/>
                 </Trigger>
                 <Trigger Property="IsSelected" Value="True">
                     <Setter Property="Background" Value="{StaticResource HighlightBrush}"/>
                     <Setter Property="Foreground" Value="{StaticResource TextForegroundWhiteBrush}"/>
                 </Trigger>
                 <!-- Trigger for selected item when ListView doesn't have focus -->
                 <MultiTrigger>
                     <MultiTrigger.Conditions>
                         <Condition Property="IsSelected" Value="True"/>
                         <Condition Property="Selector.IsSelectionActive" Value="False"/>
                     </MultiTrigger.Conditions>
                     <Setter Property="Background" Value="{StaticResource HighlightInactiveBrush}"/>
                     <Setter Property="Foreground" Value="{StaticResource TextForegroundBrush}"/> <!-- Keep text readable -->
                 </MultiTrigger>
                 <Trigger Property="IsEnabled" Value="False">
                     <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
                 </Trigger>
              </Style.Triggers>
         </Style>

         <Style TargetType="GridViewColumnHeader">
             <Setter Property="Background" Value="{StaticResource DarkBackgroundBrush}"/>
             <Setter Property="Foreground" Value="{StaticResource TextForegroundBrush}"/>
             <Setter Property="BorderBrush" Value="{StaticResource ControlBorderBrush}"/>
             <Setter Property="BorderThickness" Value="0,0,1,1"/>
             <Setter Property="Padding" Value="5,3"/>
             <Style.Triggers>
                 <Trigger Property="IsMouseOver" Value="True">
                     <Setter Property="Background" Value="{StaticResource HoverBackgroundBrush}"/>
                 </Trigger>
                  <Trigger Property="IsEnabled" Value="False">
                     <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
                     <Setter Property="Background" Value="{StaticResource DisabledBackgroundBrush}"/>
                     <Setter Property="BorderBrush" Value="{StaticResource DisabledBorderBrush}"/>
                 </Trigger>
             </Style.Triggers>
         </Style>

        <!-- ComboBox -->
        <Style x:Key="ComboBoxToggleButtonDark" TargetType="ToggleButton">
            <Setter Property="Background" Value="{StaticResource DarkBackgroundBrush}"/>
            <Setter Property="BorderBrush" Value="{StaticResource ControlBorderBrush}"/>
            <Setter Property="Foreground" Value="{StaticResource TextForegroundBrush}"/>
            <Setter Property="BorderThickness" Value="0,0,0,0"/> <!-- Adjusted for template -->
            <Setter Property="Padding" Value="3"/>
            <Setter Property="Template">
                 <Setter.Value>
                     <ControlTemplate TargetType="ToggleButton">
                         <Border x:Name="OuterBorder" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" SnapsToDevicePixels="True">
                            <Grid>
                                <Path x:Name="Arrow" Width="10" Height="6" Fill="{TemplateBinding Foreground}" Stretch="Uniform"
                                      HorizontalAlignment="Center" VerticalAlignment="Center"
                                      Data="M 0 0 L 5 6 L 10 0 Z"/>
                            </Grid>
                        </Border>
                         <ControlTemplate.Triggers>
                             <Trigger Property="IsMouseOver" Value="True">
                                 <Setter TargetName="OuterBorder" Property="Background" Value="{StaticResource HoverBackgroundBrush}"/>
                                 <Setter TargetName="OuterBorder" Property="BorderBrush" Value="{StaticResource HoverBorderBrush}"/>
                             </Trigger>
                              <Trigger Property="IsChecked" Value="True"> <!-- Dropdown is open -->
                                 <Setter TargetName="OuterBorder" Property="Background" Value="{StaticResource PressedBackgroundBrush}"/>
                             </Trigger>
                             <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="OuterBorder" Property="Background" Value="{StaticResource DisabledBackgroundBrush}"/>
                                <Setter TargetName="OuterBorder" Property="BorderBrush" Value="{StaticResource DisabledBorderBrush}"/>
                                <Setter TargetName="Arrow" Property="Fill" Value="{StaticResource DisabledForegroundBrush}"/>
                            </Trigger>
                         </ControlTemplate.Triggers>
                     </ControlTemplate>
                 </Setter.Value>
             </Setter>
        </Style>

         <ControlTemplate x:Key="ComboBoxTextBoxDark" TargetType="TextBox">
             <Border x:Name="PART_ContentHost_Border" Focusable="False"
                     Background="{TemplateBinding Background}"
                     BorderBrush="{TemplateBinding BorderBrush}"
                     BorderThickness="{TemplateBinding BorderThickness}"
                     SnapsToDevicePixels="True">
                  <ScrollViewer x:Name="PART_ContentHost" Focusable="false"
                               HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
              </Border>
              <ControlTemplate.Triggers>
                 <Trigger Property="IsEnabled" Value="False">
                      <Setter TargetName="PART_ContentHost_Border" Property="Background" Value="{StaticResource DisabledBackgroundBrush}"/>
                      <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
                  </Trigger>
              </ControlTemplate.Triggers>
          </ControlTemplate>

         <Style TargetType="ComboBox" BasedOn="{StaticResource {x:Type Control}}">
             <Setter Property="Padding" Value="5,3"/>
             <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
             <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
             <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
             <Setter Property="Template">
                  <Setter.Value>
                      <ControlTemplate TargetType="ComboBox">
                         <Grid x:Name="MainGrid" SnapsToDevicePixels="True">
                             <Grid.ColumnDefinitions>
                                 <ColumnDefinition Width="*"/>
                                 <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                             </Grid.ColumnDefinitions>
                             <Border x:Name="MainBorder" Grid.ColumnSpan="2"
                                     Background="{TemplateBinding Background}"
                                     BorderBrush="{TemplateBinding BorderBrush}"
                                     BorderThickness="{TemplateBinding BorderThickness}"
                                     CornerRadius="2"/>
                                <!-- Margin pulls it inside border -->
                             <ToggleButton Grid.Column="0" Grid.ColumnSpan="2" Margin="1"
                                           Style="{StaticResource ComboBoxToggleButtonDark}"
                                           IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                           Focusable="False" ClickMode="Press" HorizontalAlignment="Right" Width="20"/>

                             <ContentPresenter Name="ContentSite" IsHitTestVisible="False"
                                               Content="{TemplateBinding SelectionBoxItem}"
                                               ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                               ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                               Margin="{TemplateBinding Padding}"
                                               VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                               HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                               SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>

                              <TextBox x:Name="PART_EditableTextBox"
                                      Style="{x:Null}"
                                      Template="{StaticResource ComboBoxTextBoxDark}"
                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                      Margin="{TemplateBinding Padding}"
                                      Focusable="True" Background="{TemplateBinding Background}" Foreground="{TemplateBinding Foreground}"
                                      BorderBrush="Transparent" BorderThickness="0"
                                      Visibility="Hidden" IsReadOnly="{TemplateBinding IsReadOnly}"/>

                              <Popup Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}"
                                    AllowsTransparency="True" Focusable="False" PopupAnimation="Slide" Margin="1">
                                  <Grid Name="DropDown" SnapsToDevicePixels="True"
                                         MinWidth="{Binding ElementName=MainGrid, Path=ActualWidth}"
                                         MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                      <Border x:Name="DropDownBorder"
                                              Background="{StaticResource DarkBackgroundBrush}"
                                              BorderThickness="1" BorderBrush="{StaticResource ControlBorderBrush}"/>
                                      <ScrollViewer SnapsToDevicePixels="True">
                                          <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                      </ScrollViewer>
                                  </Grid>
                              </Popup>
                          </Grid>
                          <ControlTemplate.Triggers>
                              <Trigger Property="IsMouseOver" Value="True">
                                 <Setter TargetName="MainBorder" Property="BorderBrush" Value="{StaticResource HoverBorderBrush}"/>
                             </Trigger>
                              <Trigger Property="IsKeyboardFocused" Value="True">
                                 <Setter TargetName="MainBorder" Property="BorderBrush" Value="{StaticResource HighlightBrush}"/>
                              </Trigger>
                              <Trigger Property="HasItems" Value="false">
                                  <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                              </Trigger>
                              <Trigger Property="IsGrouping" Value="true">
                                  <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                              </Trigger>
                              <Trigger Property="IsEditable" Value="true">
                                  <Setter Property="IsTabStop" Value="false"/>
                                  <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible"/>
                                  <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                              </Trigger>
                              <Trigger Property="IsEnabled" Value="False">
                                 <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
                                 <Setter TargetName="MainBorder" Property="Background" Value="{StaticResource DisabledBackgroundBrush}"/>
                                 <Setter TargetName="MainBorder" Property="BorderBrush" Value="{StaticResource DisabledBorderBrush}"/>
                             </Trigger>
                          </ControlTemplate.Triggers>
                      </ControlTemplate>
                  </Setter.Value>
              </Setter>
         </Style>

         <Style TargetType="ComboBoxItem" BasedOn="{StaticResource {x:Type Control}}">
              <!-- Use the background of the dropdown (DarkBackgroundBrush) -->
              <Setter Property="Background" Value="{StaticResource DarkBackgroundBrush}"/>
              <Setter Property="BorderThickness" Value="0"/>
              <Setter Property="Padding" Value="5,3"/>
              <Style.Triggers>
                  <Trigger Property="IsMouseOver" Value="True">
                     <Setter Property="Background" Value="{StaticResource HoverBackgroundBrush}"/>
                 </Trigger>
                 <Trigger Property="IsSelected" Value="True">
                     <Setter Property="Background" Value="{StaticResource HighlightBrush}"/>
                     <Setter Property="Foreground" Value="{StaticResource TextForegroundWhiteBrush}"/>
                 </Trigger>
                  <Trigger Property="IsEnabled" Value="False">
                     <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
                 </Trigger>
             </Style.Triggers>
         </Style>

        <!-- GroupBox Style -->
        <Style TargetType="GroupBox" BasedOn="{StaticResource {x:Type Control}}">
            <Setter Property="BorderBrush" Value="{StaticResource ControlBorderBrush}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="5"/> <!-- Padding for the content inside the GroupBox -->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="GroupBox">
                        <Grid SnapsToDevicePixels="True">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/> <!-- Header Row -->
                                <RowDefinition Height="*"/>    <!-- Content Row -->
                            </Grid.RowDefinitions>

                            <!-- Main Border around Content -->
                            <Border Grid.Row="1"
                                    Background="{StaticResource MediumBackgroundBrush}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="2"
                                    Margin="0,-1,0,0"> <!-- Negative top margin pulls it under header slightly -->
                                <ContentPresenter Margin="{TemplateBinding Padding}"
                                                  ContentSource="Content"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Border>

                            <!-- Header Border / Background -->
                            <Border Grid.Row="0"
                                    Background="{StaticResource MediumBackgroundBrush}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="2,2,0,0"
                                    Margin="0,1,0,0"
                                    Padding="4,1,4,0">
                                <ContentPresenter ContentSource="Header"
                                                  RecognizesAccessKey="True"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                  Margin="2,0,0,0"
                                                  VerticalAlignment="Center"/>
                             </Border>
                        </Grid>
                         <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
                                <Setter Property="BorderBrush" Value="{StaticResource DisabledBorderBrush}"/>
                                <!-- Optionally grey out header/content backgrounds too -->
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
     </Window.Resources>
    <Grid Margin="10">
        <TabControl>
            <!-- Key Management Tab -->
            <TabItem Header="Key Management">
                <Grid Margin="5">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                    <!-- Settings Section -->
                    <GroupBox Header="Settings" Grid.Row="0" Margin="0,0,0,10">
                        <StackPanel Orientation="Vertical">
                            <Label Content="Default Key Folder:"/>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <TextBox x:Name="DefaultFolderTextBox" Grid.Column="0" IsReadOnly="True" VerticalContentAlignment="Center"/>
                                <Button x:Name="BrowseKeyFolderButton" Grid.Column="1" Content="Browse..." Margin="5,0,0,0" Padding="5,2" Click="BrowseKeyFolderButton_Click"/>
                            </Grid>
                        </StackPanel>
                    </GroupBox>

                    <!-- Key Generation Section -->
                    <Grid Grid.Row="1" Margin="0,0,0,10">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>

                        <!-- AES Generation -->
                        <GroupBox Header="Generate AES Key (Symmetric)" Grid.Column="0" Margin="0,0,5,0">
                            <StackPanel>
                                <Label Content="Key Name:"/>
                                <TextBox x:Name="AesKeyNameTextBox" Margin="0,0,0,5"/>
                                <Button x:Name="GenerateAesButton" Content="Generate AES Key" Padding="5,2" Click="GenerateAesButton_Click"/>
                            </StackPanel>
                        </GroupBox>

                        <!-- RSA Generation -->
                        <GroupBox Header="Generate RSA Key Pair (Asymmetric)" Grid.Column="1" Margin="5,0,0,0">
                            <StackPanel>
                                <Label Content="Key Name:"/>
                                <TextBox x:Name="RsaKeyNameTextBox" Margin="0,0,0,5"/>
                                <Button x:Name="GenerateRsaButton" Content="Generate RSA Key Pair" Padding="5,2" Click="GenerateRsaButton_Click"/>
                            </StackPanel>
                        </GroupBox>
                    </Grid>

                    <!-- Status moved outside TabControl -->
                    <!-- <StatusBar Grid.Row="2" Margin="0,0,0,5"> ... </StatusBar> -->

                    <!-- Key List Section -->
                    <GroupBox Header="Generated Keys" Grid.Row="3">
                        <ListView x:Name="KeyListView" Margin="0,5,0,0">
                            <ListView.View>
                                <GridView>
                                    <GridViewColumn Header="Name" Width="200" DisplayMemberBinding="{Binding Name}" />
                                    <GridViewColumn Header="Type" Width="80" DisplayMemberBinding="{Binding Type}" />
                                    <GridViewColumn Header="File Path" Width="Auto" DisplayMemberBinding="{Binding FilePath}" />
                                </GridView>
                            </ListView.View>
                        </ListView>
                    </GroupBox>

                    <Button x:Name="RefreshKeyListButton" Grid.Row="4" Content="Refresh Key List" HorizontalAlignment="Left" Margin="0,10,0,20" Padding="5,2" Click="RefreshKeyListButton_Click"/>
                </Grid>
            </TabItem>

            <!-- Image Encryption/Decryption Tab -->
            <TabItem Header="Image Encryption/Decryption">
                <Grid Margin="5">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/> <!-- Folder Settings -->
                        <RowDefinition Height="*"/>    <!-- Encrypt Group -->
                        <RowDefinition Height="*"/>    <!-- Decrypt Group -->
                    </Grid.RowDefinitions>

                     <!-- Folder Settings -->
                    <GroupBox Header="Folder Settings" Grid.Row="0" Margin="0,0,0,10">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>

                            <!-- Ciphertext Folder -->
                             <Label Grid.Row="0" Grid.Column="0" Content="Default Ciphertext Folder:"/>
                             <Grid Grid.Row="1" Grid.Column="0" Margin="0,0,5,0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <TextBox x:Name="CiphertextFolderTextBox" Grid.Column="0" IsReadOnly="True" VerticalContentAlignment="Center"/>
                                <Button x:Name="BrowseCiphertextFolderButton" Grid.Column="1" Content="Browse..." Margin="5,0,0,0" Padding="5,2" Click="BrowseCiphertextFolderButton_Click"/>
                            </Grid>

                            <!-- Decrypted Image Folder -->
                            <Label Grid.Row="0" Grid.Column="1" Content="Default Decrypted Image Folder:" Margin="5,0,0,0"/>
                            <Grid Grid.Row="1" Grid.Column="1" Margin="5,0,0,0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <TextBox x:Name="ImageFolderTextBox" Grid.Column="0" IsReadOnly="True" VerticalContentAlignment="Center"/>
                                <Button x:Name="BrowseImageFolderButton" Grid.Column="1" Content="Browse..." Margin="5,0,0,0" Padding="5,2" Click="BrowseImageFolderButton_Click"/>
                            </Grid>
                        </Grid>
                    </GroupBox>

                    <!-- Encryption Section -->
                    <GroupBox Header="Encrypt Image" Grid.Row="1" Margin="0,5,0,5">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>

                            <Label Grid.Row="0" Grid.Column="0" Content="Image to Encrypt:" VerticalAlignment="Center"/>
                            <TextBox x:Name="EncryptImageSourceTextBox" Grid.Row="0" Grid.Column="1" IsReadOnly="True" VerticalContentAlignment="Center" Margin="5,2"/>
                            <Button x:Name="BrowseEncryptImageButton" Grid.Row="0" Grid.Column="2" Content="Browse..." Padding="5,2" Margin="5,2" Click="BrowseEncryptImageButton_Click"/>

                            <Label Grid.Row="1" Grid.Column="0" Content="AES Key:" VerticalAlignment="Center"/>
                            <ComboBox x:Name="EncryptAesKeyComboBox" Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="2" Margin="5,2"
                                      DisplayMemberPath="Name" SelectedValuePath="FilePath"/>

                            <Label Grid.Row="2" Grid.Column="0" Content="Output Filename:" VerticalAlignment="Center"/>
                            <TextBox x:Name="EncryptOutputFilenameTextBox" Grid.Row="2" Grid.Column="1" Grid.ColumnSpan="2" Margin="5,2" ToolTip="Filename only (no path or extension). Will be saved as .txt (Base64)"/>

                            <Button x:Name="EncryptButton" Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="3" Content="Encrypt Image" Padding="5,2" Margin="5,10,5,5" HorizontalAlignment="Center" Click="EncryptButton_Click"/>

                        </Grid>
                    </GroupBox>

                    <!-- Decryption Section -->
                    <GroupBox Header="Decrypt Image" Grid.Row="2" Margin="0,5,0,0">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <!-- Ciphertext Selection -->
                                <RowDefinition Height="Auto"/>
                                <!-- Key Selection -->
                                <RowDefinition Height="Auto"/>
                                <!-- Output Filename -->
                                <RowDefinition Height="Auto"/>
                                <!-- Output Format -->
                                <RowDefinition Height="Auto"/>
                                <!-- Decrypt Button -->
                                <RowDefinition Height="Auto"/>
                                <!-- Hash Display (New) -->
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                                <!-- For Refresh button -->
                            </Grid.ColumnDefinitions>

                            <Label Grid.Row="0" Grid.Column="0" Content="Ciphertext to Decrypt:" VerticalAlignment="Center"/>
                             <ComboBox x:Name="DecryptCiphertextComboBox" Grid.Row="0" Grid.Column="1" Margin="5,2"
                                      DisplayMemberPath="Name" SelectedValuePath="FilePath"/>
                            <Button x:Name="RefreshCiphertextListButton" Grid.Row="0" Grid.Column="2" Content="Refresh List" Padding="5,2" Margin="5,2" Click="RefreshCiphertextListButton_Click"/>


                            <Label Grid.Row="1" Grid.Column="0" Content="AES Key:" VerticalAlignment="Center"/>
                             <ComboBox x:Name="DecryptAesKeyComboBox" Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="2" Margin="5,2"
                                      DisplayMemberPath="Name" SelectedValuePath="FilePath"/>

                             <Label Grid.Row="2" Grid.Column="0" Content="Output Filename:" VerticalAlignment="Center"/>
                             <TextBox x:Name="DecryptOutputFilenameTextBox" Grid.Row="2" Grid.Column="1" Grid.ColumnSpan="2" Margin="5,2" ToolTip="Filename only (no path or extension)"/>

                             <Label Grid.Row="3" Grid.Column="0" Content="Output Format:" VerticalAlignment="Center"/>
                             <ComboBox x:Name="DecryptOutputFormatComboBox" Grid.Row="3" Grid.Column="1" Grid.ColumnSpan="2" Margin="5,2">
                                 <ComboBoxItem Content=".png"/>
                                 <ComboBoxItem Content=".jpg"/>
                                 <ComboBoxItem Content=".bmp"/>
                                 <ComboBoxItem Content=".gif"/>
                             </ComboBox>

                             <Button x:Name="DecryptButton" Grid.Row="4" Grid.Column="0" Grid.ColumnSpan="3" Content="Decrypt Image" Padding="5,2" Margin="5,10,5,5" HorizontalAlignment="Center" Click="DecryptButton_Click"/>
                             <!-- New Hash Display Area -->
                             <Label Grid.Row="5" Grid.Column="0" Content="Decrypted File Hash:" VerticalAlignment="Center" Margin="0,10,0,0"/>
                             <TextBox x:Name="DecryptedFileHashTextBox" Grid.Row="5" Grid.Column="1" Grid.ColumnSpan="2" Margin="5,10,5,0" IsReadOnly="True" VerticalContentAlignment="Center" FontFamily="Consolas" ToolTip="SHA-256 Hash of the saved decrypted file."/>

                        </Grid>
                    </GroupBox>

                </Grid>
            </TabItem>
            <TabItem Header="AES Key Encryption (RSA)">
                    <Grid Margin="5">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/> <!-- Folder Settings -->
                            <RowDefinition Height="*"/>    <!-- Encrypt Group -->
                            <RowDefinition Height="*"/>    <!-- Decrypt Group -->
                        </Grid.RowDefinitions>

                         <!-- Folder Settings -->
                        <GroupBox Header="Folder Setting (Encrypted AES Keys)" Grid.Row="0" Margin="0,0,0,10">
                             <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                 <Label Grid.Column="0" Content="Encrypted AES Key Folder:" VerticalAlignment="Center"/>
                                 <TextBox x:Name="EncryptedAesFolderTextBox" Grid.Column="1" IsReadOnly="True" VerticalContentAlignment="Center" Margin="5,0"/>
                                 <Button x:Name="BrowseEncryptedAesFolderButton" Grid.Column="2" Content="Browse..." Padding="5,2" Click="BrowseEncryptedAesFolderButton_Click"/>
                             </Grid>
                        </GroupBox>

                        <!-- AES Key Encryption Section -->
                        <GroupBox Header="Encrypt AES Key" Grid.Row="1" Margin="0,5,0,5">
                            <Grid>
                                 <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>

                                <Label Grid.Row="0" Grid.Column="0" Content="AES Key to Encrypt:" VerticalAlignment="Center"/>
                                <ComboBox x:Name="EncryptRsaAesKeyComboBox" Grid.Row="0" Grid.Column="1" Margin="5,2"
                                          DisplayMemberPath="Name" SelectedValuePath="FilePath"/>

                                <Label Grid.Row="1" Grid.Column="0" Content="RSA Public Key:" VerticalAlignment="Center"/>
                                <ComboBox x:Name="EncryptRsaPublicKeyComboBox" Grid.Row="1" Grid.Column="1" Margin="5,2"
                                          DisplayMemberPath="Name" SelectedValuePath="FilePath"/>

                                <Label Grid.Row="2" Grid.Column="0" Content="Output Filename:" VerticalAlignment="Center"/>
                                <TextBox x:Name="EncryptRsaOutputFilenameTextBox" Grid.Row="2" Grid.Column="1" Margin="5,2" ToolTip="Filename only (no path or extension). Will be saved as .txt (Base64)"/>

                                <Button x:Name="EncryptAesKeyButton" Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="2" Content="Encrypt AES Key with RSA" Padding="5,2" Margin="5,10,5,5" HorizontalAlignment="Center" Click="EncryptAesKeyButton_Click"/>

                            </Grid>
                        </GroupBox>

                        <!-- AES Key Decryption Section -->
                         <GroupBox Header="Decrypt AES Key" Grid.Row="2" Margin="0,5,0,0">
                             <Grid>
                                 <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/> <!-- For Refresh button -->
                                </Grid.ColumnDefinitions>

                                 <Label Grid.Row="0" Grid.Column="0" Content="Encrypted AES Key:" VerticalAlignment="Center"/>
                                 <ComboBox x:Name="DecryptRsaEncryptedAesKeyComboBox" Grid.Row="0" Grid.Column="1" Margin="5,2"
                                          DisplayMemberPath="Name" SelectedValuePath="FilePath"/>
                                 <Button x:Name="RefreshEncryptedAesListButton" Grid.Row="0" Grid.Column="2" Content="Refresh List" Padding="5,2" Margin="5,2" Click="RefreshEncryptedAesListButton_Click"/>


                                 <Label Grid.Row="1" Grid.Column="0" Content="RSA Private Key:" VerticalAlignment="Center"/>
                                 <ComboBox x:Name="DecryptRsaPrivateKeyComboBox" Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="2" Margin="5,2"
                                          DisplayMemberPath="Name" SelectedValuePath="FilePath"/>

                                 <Label Grid.Row="2" Grid.Column="0" Content="Output AES Key Name:" VerticalAlignment="Center"/>
                                 <TextBox x:Name="DecryptRsaOutputFilenameTextBox" Grid.Row="2" Grid.Column="1" Grid.ColumnSpan="2" Margin="5,2" ToolTip="Name for the decrypted AES key file (no path/extension). Saved to main key folder."/>


                                 <Button x:Name="DecryptAesKeyButton" Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="3" Content="Decrypt AES Key with RSA" Padding="5,2" Margin="5,10,5,5" HorizontalAlignment="Center" Click="DecryptAesKeyButton_Click"/>

                                 <TextBlock Grid.Row="4" Grid.Column="0" Grid.ColumnSpan="3" TextWrapping="Wrap" Margin="5" Foreground="Gray">
                                     Note: Decrypted AES keys will be saved to the main 'Default Key Folder' (set in the Key Management tab) in the standard AES format (<Run FontWeight="Bold">KeyName_aes.txt</Run>).
                                 </TextBlock>

                            </Grid>
                        </GroupBox>

                    </Grid>
            </TabItem>
            <TabItem Header="File Hash Verification">
                <Grid Margin="5">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/> <!-- File 1 Selection -->
                        <RowDefinition Height="Auto"/> <!-- File 1 Hash -->
                        <RowDefinition Height="Auto"/> <!-- File 2 Selection -->
                        <RowDefinition Height="Auto"/> <!-- File 2 Hash -->
                        <RowDefinition Height="Auto"/> <!-- Compare Button -->
                        <RowDefinition Height="Auto"/> <!-- Result -->
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/> <!-- Browse Buttons -->
                    </Grid.ColumnDefinitions>

                    <!-- File 1 -->
                    <Label Grid.Row="0" Grid.Column="0" Content="File 1:" VerticalAlignment="Center"/>
                    <TextBox x:Name="HashFile1TextBox" Grid.Row="0" Grid.Column="1" Margin="5" IsReadOnly="True" VerticalContentAlignment="Center"/>
                    <Button x:Name="BrowseHashFile1Button" Grid.Row="0" Grid.Column="2" Content="Browse..." Padding="5,2" Margin="5" Click="BrowseHashFile1Button_Click"/>
                    <Label Grid.Row="1" Grid.Column="0" Content="Hash (SHA-256):" VerticalAlignment="Center"/>
                    <TextBox x:Name="HashFile1ResultTextBox" Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="2" Margin="5" IsReadOnly="True" VerticalContentAlignment="Center" FontFamily="Consolas"/>

                     <!-- File 2 -->
                    <Label Grid.Row="2" Grid.Column="0" Content="File 2:" VerticalAlignment="Center" Margin="0,10,0,0"/>
                    <TextBox x:Name="HashFile2TextBox" Grid.Row="2" Grid.Column="1" Margin="5,15,5,5" IsReadOnly="True" VerticalContentAlignment="Center"/>
                    <Button x:Name="BrowseHashFile2Button" Grid.Row="2" Grid.Column="2" Content="Browse..." Padding="5,2" Margin="5,15,5,5" Click="BrowseHashFile2Button_Click"/>
                    <Label Grid.Row="3" Grid.Column="0" Content="Hash (SHA-256):" VerticalAlignment="Center"/>
                    <TextBox x:Name="HashFile2ResultTextBox" Grid.Row="3" Grid.Column="1" Grid.ColumnSpan="2" Margin="5" IsReadOnly="True" VerticalContentAlignment="Center" FontFamily="Consolas"/>

                    <!-- Compare Button -->
                    <Button x:Name="CompareHashesButton" Grid.Row="4" Grid.Column="0" Grid.ColumnSpan="3" Content="Compare File Hashes" Padding="5" Margin="10,15,10,5" HorizontalAlignment="Center" Click="CompareHashesButton_Click"/>

                    <!-- Result Indicator -->
                    <TextBlock Grid.Row="5" Grid.Column="0" Grid.ColumnSpan="3" x:Name="HashComparisonResultTextBlock" Margin="5,10,5,5" HorizontalAlignment="Center" FontSize="14" FontWeight="Bold"/>

                </Grid>
            </TabItem>
        </TabControl>

        <StatusBar Grid.Row="1" VerticalAlignment="Bottom" Margin="0,5,0,0">
            <StatusBarItem>
                <TextBlock x:Name="StatusTextBlock" Text="Ready"/>
            </StatusBarItem>
            <Separator/>
            <!-- New Algorithm Indicator -->
            <StatusBarItem>
                <TextBlock x:Name="HashingAlgorithmIndicator" Text="Hashing Algorithm: SHA-256"/>
            </StatusBarItem>
        </StatusBar>

    </Grid>
</Window>